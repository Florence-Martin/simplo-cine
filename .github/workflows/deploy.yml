name: Build and Push Docker Images

on:
  push:
    branches:
      - develop

jobs:
  build_and_push_images_dockerhub:
    runs-on: ubuntu-latest
    needs: run_tests_microservices

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/users-service:1.0.0 ./micro-services/users-service
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/movies-service:1.0.0 ./micro-services/movies-service
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/search-service:1.0.0 ./micro-services/search-service
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/sessions-service:1.0.0 ./micro-services/sessions-service
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/rooms-service:1.0.0 ./micro-services/rooms-service
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/notifications-service:1.0.0 ./micro-services/notifications-service
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/front-app:1.0.0 ./front
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/prometheus-service:1.0.0 ./monitoring/prometheus

          docker push ${{ secrets.DOCKERHUB_USERNAME }}/users-service:1.0.0
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/movies-service:1.0.0
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/search-service:1.0.0
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/sessions-service:1.0.0
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/rooms-service:1.0.0
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/notifications-service:1.0.0
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/front-app:1.0.0
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/prometheus-service:1.0.0

      - name: Build and push Nginx image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nginx:1.0.0 ./api/nginx
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nginx:1.0.0

  # Étape de nettoyage des anciens conteneurs et réseau sur le VPS
  cleanup_and_prepare_vps:
    runs-on: ubuntu-latest
    needs: build_and_push_docker_images

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Clean up Docker containers and networks on VPS
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            containers=$(sudo docker ps -q)
            if [ -n "$containers" ]; then
              sudo docker stop $containers
            fi

            containers=$(sudo docker ps -a -q)
            if [ -n "$containers" ]; then
              sudo docker rm $containers
              sudo docker network rm simplo-cine_simplo-cine-network
            fi

  build_app_with_docker_compose_file:
    runs-on: ubuntu-latest
    needs: cleanup_and_prepare_vps

    steps:
      - name: Deploy the application
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            cd ~/devops/simplo-cine
            sudo docker-compose down
            sudo docker-compose build --parallel
            sudo docker-compose up --build -d
