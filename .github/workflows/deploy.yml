name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  analyze:
    runs-on: ubuntu-latest # Le job s'exécute sur une machine virtuelle Ubuntu

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        # Vérifie le code source du dépôt pour l'utiliser dans le workflow

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.17.0"
        # Configure Node.js version 18 pour l'environnement d'exécution

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "adopt"

      - name: Verify Java version
        run: java -version

      - name: Install dependencies
        run: npm install
        # Installe les dépendances définies dans package.json

      - name: Run tests
        run: npm test
        # Exécute les tests unitaires pour s'assurer que le code est fonctionnel

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          # Lance l'analyse de qualité du code avec SonarQube
          npx sonar-scanner -Dsonar.login=$SONAR_TOKEN

      - name: Display SonarCloud link
        run: |
          echo "SonarCloud analysis results: https://sonarcloud.io/dashboard?id=Florence-Martin_simplo-cine"

      - name: Build project
        run: npm run build
        # Construit le projet après l'analyse et les tests

      - name: Save build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build/
          # Suppose que notre build est dans le dossier 'build/'

  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' # empêche l’exécution du déploiement lors des pull requests
    runs-on: ubuntu-latest # Le job s'exécute sur une machine virtuelle Ubuntu
    needs: analyze # Ce job dépend du job 'analyze'. Il ne s'exécutera que si 'analyze' réussit.

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        # Vérifie à nouveau le code source du dépôt pour s'assurer que nous avons la dernière version

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            sudo apt-get update
            sudo apt-get install -y nodejs npm
            sudo npm install -g pm2

            if [ ! -d "/home/adminlocal/projet-code-quality/.git" ]; then
              git clone https://$GITHUB_TOKEN@github.com/Florence-Martin/simplo-cine.git /home/adminlocal/simplo-cine
            fi

            cd /home/adminlocal/simplo-cine

            export PATH=$PATH:/usr/local/bin

            git pull https://$GITHUB_TOKEN@github.com/Florence-Martin/simplo-cine.git main

            npm install

            # Utiliser les artefacts buildés précédemment
            cp -r $GITHUB_WORKSPACE/build/* /home/adminlocal/simplo-cine/build/

            pm2 restart simplo-cine || pm2 start npm --name "simplo-cine" -- start
